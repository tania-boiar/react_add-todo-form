{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","title","completed","classNames","TodoList","todos","map","getUser","userId","usersFromServer","find","staticTodos","App","useState","todoTitle","setTodoTitle","todoUser","setTodoUser","setTodos","titleError","setTitleError","userError","setUserError","action","method","onSubmit","event","preventDefault","length","newTodo","Math","max","currentTodos","type","placeholder","value","onChange","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fc81a85b.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { User } from '../../types/User';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => (\n  <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n    {user.name}\n  </a>\n);\n","import classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    title,\n    user,\n    completed,\n    id,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={classNames(\n        'TodoInfo',\n        { 'TodoInfo--completed': completed },\n      )}\n    >\n      <h2 className=\"TodoInfo__title\">{title}</h2>\n\n      {user && (\n        <UserInfo user={user} />\n      )}\n    </article>\n  );\n};\n","import { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map(todo => (\n      <TodoInfo key={todo.id} todo={todo} />\n    ))}\n  </section>\n);\n","import { useState, ChangeEvent, SyntheticEvent } from 'react';\nimport './App.scss';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nimport { User } from './types/User';\nimport { Todo } from './types/Todo';\nimport { TodoList } from './components/TodoList';\n\nfunction getUser(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n}\n\nexport const staticTodos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nexport const App = () => {\n  const [todoTitle, setTodoTitle] = useState('');\n  const [todoUser, setTodoUser] = useState(0);\n  const [todos, setTodos] = useState(staticTodos);\n  const [titleError, setTitleError] = useState(false);\n  const [userError, setUserError] = useState(false);\n\n  const handleInput = (event: ChangeEvent<HTMLInputElement>) => {\n    setTodoTitle(event.target.value);\n    setTitleError(false);\n  };\n\n  const handleSelect = (event: ChangeEvent<HTMLSelectElement>) => {\n    setTodoUser(+event.target.value);\n    setUserError(false);\n  };\n\n  const createToDo = (event: SyntheticEvent) => {\n    event.preventDefault();\n\n    if (!todoTitle.length) {\n      setTitleError(true);\n    }\n\n    if (!todoUser) {\n      setUserError(true);\n    }\n\n    if (todoTitle.length && todoUser) {\n      const newTodo = {\n        completed: false,\n        id: Math.max(...todos.map(todo => todo.id)) + 1,\n        title: todoTitle,\n        user: getUser(todoUser),\n        userId: todoUser,\n      };\n\n      setTodos((currentTodos: Todo[]) => (\n        [\n          ...currentTodos,\n          newTodo,\n        ]\n      ));\n\n      setTodoUser(0);\n      setTodoTitle('');\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={createToDo}\n      >\n        <div className=\"field\">\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n            value={todoTitle}\n            onChange={handleInput}\n          />\n          {titleError\n          && <span className=\"error\">Please enter a title</span>}\n        </div>\n\n        <div className=\"field\">\n          <select\n            data-cy=\"userSelect\"\n            value={todoUser}\n            onChange={handleSelect}\n          >\n            <option value=\"0\" disabled>\n              Choose a user\n            </option>\n            {usersFromServer.map(user => (\n              <option key={user.id} value={user.id}>{user.name}</option>\n            ))}\n          </select>\n\n          {userError\n          && <span className=\"error\">Please choose a user</span>}\n        </div>\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}